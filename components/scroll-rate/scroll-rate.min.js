"use strict";function ScrollRate(opts){this.root=opts.root;this.nodes=opts.nodes;this.offset=typeof opts.offset==="number"?opts.offset:.5;this.cb=opts.cb;this.nodesCb=opts.nodesCb;this.onProgressEnter=opts.onProgressEnter;this.onProgressLeave=opts.onProgressLeave;this.rect=null;this.progress=null;this.distance=null;this.progressRate=null;this.distanceRate=null;this.state=null;this._prevProgressRate=null;this._observer=null;this._handler=this.update.bind(this);this.root.scrollRate=this;this.init();this.start()}ScrollRate.prototype.init=function(){var _this=this;this._observer=new IntersectionObserver(function(entries){entries.forEach(function(entry){_this._handler();if(entry.isIntersecting){document.addEventListener("scroll",_this._handler);window.addEventListener("resize",_this._handler)}else{document.removeEventListener("scroll",_this._handler);window.removeEventListener("resize",_this._handler)}})})};ScrollRate.prototype.start=function(){this._observer.observe(this.root);this.state=true};ScrollRate.prototype.stop=function(){this._observer.unobserve(this.root);document.removeEventListener("scroll",this._handler);window.removeEventListener("resize",this._handler);this.state=false};ScrollRate.prototype.update=function(){var _this2=this;this.rect=this.root.getBoundingClientRect();if(this.rect.top>window.innerHeight*this.offset){this.progress=0}else if(this.rect.top<=window.innerHeight*this.offset&&this.rect.bottom>=window.innerHeight*this.offset){this.progress=Math.abs(this.rect.top-window.innerHeight*this.offset)}else{this.progress=this.rect.height}this.distance=window.innerHeight*this.offset-(this.rect.top+this.rect.height/2);this.progressRate=this.progress/this.rect.height;this.distanceRate=this.distance/window.innerHeight;if(this.onProgressEnter instanceof Function&&(this._prevProgressRate===0&&this.progressRate>0||this._prevProgressRate===1&&this.progressRate<1)){this.onProgressEnter.call(this)}if(this.onProgressLeave instanceof Function&&(this._prevProgressRate>0&&this.progressRate<=0||this._prevProgressRate<1&&this.progressRate>=1)){this.onProgressLeave.call(this)}if(this.cb instanceof Function){this.cb.call(this)}if(this.nodes&&this.nodes.length&&this.nodesCb instanceof Function){this.nodes.forEach(function(node){_this2.nodesCb.call(_this2,node)})}this._prevProgressRate=this.progressRate};